{"version":3,"sources":["panels/ImportPage.jsx","components/WinnersPercentageChart.jsx","components/WinnersPercentageNoGradeChart.jsx","data/WithGradesWinnersData.js","data/WithoutGradeWinnersData.js","data/PointsData.js","components/AveragePointsChart.jsx","data/PointsGapsData.js","components/PointsGapsChart.jsx","panels/AnalysisPage.jsx","App.js","index.js"],"names":["ImportPage","uploadedFile","setJsonTable","history","useHistory","style","marginTop","Grid","container","direction","item","xs","sm","md","Typography","variant","align","textAlign","type","id","accept","onInput","event","target","files","Button","size","color","onClick","fileReader","FileReader","readAsBinaryString","onload","data","result","workbook","XLSX","read","rowObject","utils","sheet_to_row_object_array","Sheets","SheetNames","console","log","push","WinnersPercentageChart","participantsData","useState","currentGrade","setCurrentGrade","COLORS","changeChartData","name","value","undefined","ButtonGroup","aria-label","disabled","PieChart","width","height","marginLeft","marginRight","Pie","nameKey","innerRadius","outerRadius","fill","paddingAngle","dataKey","label","map","entry","index","Cell","length","Legend","layout","verticalAlign","WinnersPercentageNoGradeChart","participantsWithoutGradeData","participants","WithGradesWinnersData","this","grade_8_participants","grade_9_participants","grade_10_participants","grade_11_participants","DifferentGradesData","PointsData","numberOfParticipants","pointsSum","AveragePointsChart","pointsData","toFixed","BarChart","CartesianGrid","strokeDasharray","XAxis","allowDuplicatedCategory","YAxis","Tooltip","Bar","PointsGapsData","gaps","10","20","30","40","50","60","70","80","90","100","PointsGapsChart","pointsGapsData","AnalysisPage","jsonTable","grade","points","place","NoGradesWinnersData","i","__EMPTY_6","__EMPTY_5","__EMPTY_4","AppBar","position","Toolbar","Object","keys","App","exact","path","render","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7cd3d33.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport XLSX from 'xlsx';\n\nconst ImportPage = ({setJsonTable}) => {\n\n    let uploadedFile;\n    const history = useHistory();\n\n    return (\n        <div style={{marginTop: '24px'}}>\n            <Grid container direction='row'>\n                <Grid item xs={false} sm={2} md={3}/>\n                <Grid item container direction=\"column\" sm={8} md={6}>\n                    <Grid item>\n                        <Typography variant='h4' align='center'>\n                            Добро пожаловать!\n                        </Typography>\n                        <Typography variant='h6' align='center'>\n                            Данный сайт является прототипом интерактивной визуализации результатов олимпиады школьников\n                            по одному из предметов\n                        </Typography>\n                        <Typography variant='subtitle1' align='center' style={{marginTop: '36px'}}>\n                            Для продолжения загрузите .xls или .xslx файл в форму ниже\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <div style={{textAlign: 'center'}}>\n                            <input type=\"file\" id=\"input\" accept=\".xls,.xlsx\" onInput={(event) => {\n                                uploadedFile = event.target.files[0];\n                            }}/>\n                        </div>\n                    </Grid>\n                    <Grid item>\n                        <div style={{textAlign: 'center', marginTop: '32px'}}>\n                            <Button\n                                variant=\"contained\"\n                                size=\"large\"\n                                color=\"primary\"\n                                onClick={() => {\n                                    if(uploadedFile){\n                                        let fileReader = new FileReader();\n                                        fileReader.readAsBinaryString(uploadedFile);\n                                        fileReader.onload = (event)=>{\n                                            let data = event.target.result;\n                                            let workbook = XLSX.read(data, {type: \"binary\"});\n                                            let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[workbook.SheetNames[0]]);\n                                            setJsonTable(rowObject)\n                                            console.log(rowObject);\n                                            history.push('/result')\n                                        }\n                                    }\n                                }}>\n                                Загрузить\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid item xs={false} sm={2} md={3}/>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default ImportPage","import React, {useState} from \"react\";\nimport {Button, ButtonGroup, Grid, Typography} from \"@material-ui/core\";\nimport {PieChart, Cell, Pie, Legend} from \"recharts\";\n\nconst WinnersPercentageChart = ({participantsData}) => {\n\n    const [currentGrade, setCurrentGrade] = useState(8)\n    let data;\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n\n    const changeChartData = () => {\n        data = [\n            {name: 'Диплом 1 степени', value: participantsData[`grade_${currentGrade}_participants`][1]},\n            {name: 'Диплом 2 степени', value: participantsData[`grade_${currentGrade}_participants`][2]},\n            {name: 'Диплом 3 степени', value: participantsData[`grade_${currentGrade}_participants`][3]},\n            {name: 'Без призового места', value: participantsData[`grade_${currentGrade}_participants`][undefined]},\n        ];\n        console.log(data)\n    }\n\n    changeChartData()\n    return (\n        <div style={{textAlign: 'center', marginTop: '24px'}}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h6'>\n                        Кол-во призовых мест среду учащихся __ класса\n                    </Typography>\n                    <Typography variant='body2' color='textSecondary'>\n                        Класс\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <ButtonGroup variant=\"text\" color=\"inherit\" size='large' aria-label=\"text primary button group\">\n                        <Button\n                            disabled={currentGrade === 8}\n\n                            onClick={() => {\n                                setCurrentGrade(8);\n                                changeChartData()\n                            }}>\n                            8\n                        </Button>\n                        <Button\n                            disabled={currentGrade === 9}\n                            onClick={() => {\n                                setCurrentGrade(9)\n                                changeChartData()\n                            }}>\n                            9\n                        </Button>\n                        <Button\n                            disabled={currentGrade === 10}\n                            onClick={() => {\n                                setCurrentGrade(10)\n                                changeChartData()\n                            }}>\n                            10\n                        </Button>\n                        <Button\n                            disabled={currentGrade === 11}\n                            onClick={() => {\n                                setCurrentGrade(11)\n                                changeChartData()\n                            }}>\n                            11\n                        </Button>\n                    </ButtonGroup>\n                </Grid>\n                <Grid item>\n                    <PieChart width={450} height={230} style={{marginLeft: 'auto', marginRight: 'auto'}}>\n                        <Pie\n                            data={data}\n                            nameKey=\"name\"\n                            innerRadius={60}\n                            outerRadius={80}\n                            fill=\"#8884d8\"\n                            paddingAngle={5}\n                            dataKey=\"value\"\n                            label\n                        >\n\n                            {data.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                            ))}\n                        </Pie>\n                        <Legend layout='vertical' align='right' verticalAlign='middle'/>\n                    </PieChart>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\n\nexport default WinnersPercentageChart","import React, {useState} from \"react\";\nimport {Button, ButtonGroup, Grid, Typography} from \"@material-ui/core\";\nimport {PieChart, Cell, Pie, Legend} from \"recharts\";\n\nconst WinnersPercentageNoGradeChart = ({participantsWithoutGradeData}) => {\n\n    const data = [\n        {name: 'Диплом 1 степени', value: participantsWithoutGradeData.participants[1]},\n        {name: 'Диплом 2 степени', value: participantsWithoutGradeData.participants[2]},\n        {name: 'Диплом 3 степени', value: participantsWithoutGradeData.participants[3]},\n        {name: 'Без призового места', value: participantsWithoutGradeData.participants[undefined]},\n    ];\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n    return (\n        <div style={{textAlign: 'center', marginTop: '24px'}}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h6'>\n                        Кол-во призовых мест\n                    </Typography>\n                    <Typography variant='body2' color='textSecondary'>\n                        Среди учащихся всех классов\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <PieChart width={450} height={230} style={{marginLeft: 'auto', marginRight: 'auto', marginTop: '32px'}}>\n                        <Pie\n                            data={data}\n                            nameKey=\"name\"\n                            innerRadius={60}\n                            outerRadius={80}\n                            fill=\"#8884d8\"\n                            paddingAngle={5}\n                            dataKey=\"value\"\n                            label\n                        >\n\n                            {data.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                            ))}\n                        </Pie>\n                        <Legend layout='vertical' align='right' verticalAlign='middle'/>\n                    </PieChart>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\n\nexport default WinnersPercentageNoGradeChart","export default class WithGradesWinnersData {\n    constructor() {\n        this.grade_8_participants = { //участники из 8 класса\n            undefined: 0, // без диплома\n            '1': 0, // диплом первой степени\n            '2': 0, // второй\n            '3': 0  // третьей\n        }\n        this.grade_9_participants = {\n            undefined: 0,\n            '1': 0,\n            '2': 0,\n            '3': 0\n        }\n        this.grade_10_participants = {\n            undefined: 0,\n            '1': 0,\n            '2': 0,\n            '3': 0\n        }\n        this.grade_11_participants = {\n            undefined: 0,\n            '1': 0,\n            '2': 0,\n            '3': 0\n        }\n    }\n}","export default class DifferentGradesData {\n    constructor() {\n        this.participants = { //участники\n            undefined: 0, // без диплома\n            '1': 0, // диплом первой степени\n            '2': 0, // второй\n            '3': 0  // третьей\n        }\n    }\n}","export default class PointsData {\n    constructor() {\n        this.numberOfParticipants = {\n            '8': 0,\n            '9': 0,\n            '10': 0,\n            '11': 0\n        }\n        this.pointsSum = {\n            '8': 0,\n            '9': 0,\n            '10': 0,\n            '11': 0\n        }\n    }\n}","import React from \"react\";\nimport { Grid, Typography} from \"@material-ui/core\";\nimport {BarChart, Tooltip, Legend, CartesianGrid, XAxis, YAxis, Bar} from \"recharts\";\n\nconst AveragePointsChart = ({pointsData}) => {\n\n    const data = [\n        {name: '8 класс', 'Средний балл': (pointsData.pointsSum[8] / pointsData.numberOfParticipants[8]).toFixed(2)},\n        {name: '9 класс', 'Средний балл': (pointsData.pointsSum[9] / pointsData.numberOfParticipants[9]).toFixed(2)},\n        {name: '10 класс', 'Средний балл': (pointsData.pointsSum[10] / pointsData.numberOfParticipants[10]).toFixed(2)},\n        {name: '11 класс', 'Средний балл': (pointsData.pointsSum[11] / pointsData.numberOfParticipants[11]).toFixed(2)},\n    ]\n\n\n    return (\n        <div style={{textAlign: 'center', marginTop: '24px'}}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h6'>\n                        Средний балл\n                    </Typography>\n                    <Typography variant='body2' color='textSecondary'>\n                        Учащихся разных классов\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <BarChart width={450} height={230} data={data}>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis dataKey=\"name\" allowDuplicatedCategory={true}/>\n                        <YAxis/>\n                        <Tooltip/>\n                        <Legend/>\n                        <Bar dataKey=\"Средний балл\" fill=\"#8884d8\"/>\n                    </BarChart>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\n\nexport default AveragePointsChart","export default class PointsGapsData {\n    constructor() {\n        this.gaps = {\n            10: 0,\n            20: 0,\n            30: 0,\n            40: 0,\n            50: 0,\n            60: 0,\n            70: 0,\n            80: 0,\n            90: 0,\n            100: 0,\n        }\n    }\n}","import React from \"react\";\nimport { Grid, Typography} from \"@material-ui/core\";\nimport {BarChart, Tooltip, Legend, CartesianGrid, XAxis, YAxis, Bar} from \"recharts\";\n\nconst PointsGapsChart = ({pointsGapsData}) => {\n\n    const data = [\n        {name: '0-10', 'Кол-во учащихся': pointsGapsData.gaps[10]},\n        {name: '10-20', 'Кол-во учащихся': pointsGapsData.gaps[20]},\n        {name: '20-30', 'Кол-во учащихся': pointsGapsData.gaps[30]},\n        {name: '30-40', 'Кол-во учащихся': pointsGapsData.gaps[40]},\n        {name: '40-50', 'Кол-во учащихся': pointsGapsData.gaps[50]},\n        {name: '50-60', 'Кол-во учащихся': pointsGapsData.gaps[60]},\n        {name: '60-70', 'Кол-во учащихся': pointsGapsData.gaps[70]},\n        {name: '70-80', 'Кол-во учащихся': pointsGapsData.gaps[80]},\n        {name: '80-90', 'Кол-во учащихся': pointsGapsData.gaps[90]},\n        {name: '90-100', 'Кол-во учащихся': pointsGapsData.gaps[100]},\n        ]\n\n\n    return (\n        <div style={{textAlign: 'center', marginTop: '24px'}}>\n            <Grid container direction='column'>\n                <Grid item>\n                    <Typography variant='h6'>\n                        Кол-во набранных баллов\n                    </Typography>\n                    <Typography variant='body2' color='textSecondary'>\n                        Среди учащихся всех классов\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <BarChart width={450} height={230} data={data}>\n                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                        <XAxis dataKey=\"name\" allowDuplicatedCategory={true}/>\n                        <YAxis/>\n                        <Tooltip/>\n                        <Legend/>\n                        <Bar dataKey='Кол-во учащихся' fill=\"#00C49F\"/>\n                    </BarChart>\n                </Grid>\n            </Grid>\n        </div>\n    )\n\n}\n\n\nexport default PointsGapsChart","import React from \"react\";\nimport {AppBar, Grid, Toolbar, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\nimport WinnersPercentageChart from \"../components/WinnersPercentageChart\";\nimport WinnersPercentageNoGradeChart from \"../components/WinnersPercentageNoGradeChart\";\n\nimport WithGradesWinnersData from '../data/WithGradesWinnersData'\nimport NoGradesWinnersData from '../data/WithoutGradeWinnersData'\nimport PointsData from '../data/PointsData'\nimport AveragePointsChart from \"../components/AveragePointsChart\";\nimport PointsGapsData from \"../data/PointsGapsData\";\nimport PointsGapsChart from \"../components/PointsGapsChart\";\n\nconst AnalysisPage = ({jsonTable}) => {\n\n    const history = useHistory()\n    if (!jsonTable) {\n        history.push('/import')\n    }\n\n    const participantsData = new WithGradesWinnersData();\n    const participantsWithoutGradeData = new NoGradesWinnersData();\n    const pointsData = new PointsData();\n    const pointsGapsData = new PointsGapsData();\n\n    let grade;\n    let points;\n    let place;\n    for (let i = 1; i < jsonTable.length; i++) {\n        place = jsonTable[i].__EMPTY_6;\n        points = jsonTable[i].__EMPTY_5;\n        grade = jsonTable[i].__EMPTY_4;\n        // eslint-disable-next-line default-case\n        switch (grade) {\n            case 8: {\n                participantsData.grade_8_participants[place]++;\n                break;\n            }\n            case 9: {\n                participantsData.grade_9_participants[place]++;\n                break;\n            }\n            case 10: {\n                participantsData.grade_10_participants[place]++;\n                break;\n            }\n            case 11: {\n                participantsData.grade_11_participants[place]++;\n                break;\n            }\n        }\n        switch (true) {\n            case (points < 10) : {\n                pointsGapsData.gaps[10]++\n                break;\n            }\n            case (points < 20) : {\n                pointsGapsData.gaps[20]++\n                break;\n            }\n            case (points < 30) : {\n                pointsGapsData.gaps[30]++\n                break;\n            }\n            case (points < 40) : {\n                pointsGapsData.gaps[40]++\n                break;\n            }\n            case (points < 50) : {\n                pointsGapsData.gaps[50]++\n                break;\n            }\n            case (points < 60) : {\n                pointsGapsData.gaps[60]++\n                break;\n            }\n            case (points < 70) : {\n                pointsGapsData.gaps[70]++\n                break;\n            }\n            case (points < 80) : {\n                pointsGapsData.gaps[80]++\n                break;\n            }\n            case (points < 90) : {\n                pointsGapsData.gaps[90]++\n                break;\n            }\n            case (points <= 100) : {\n                pointsGapsData.gaps[100]++\n                break;\n            }\n        }\n        pointsData.numberOfParticipants[grade]++;\n        pointsData.pointsSum[grade] += points;\n        participantsWithoutGradeData.participants[place]++;\n    }\n\n    return (\n        <div>\n            <AppBar style={{position: 'relative'}}>\n                <Toolbar>\n                    {(Object.keys(jsonTable[0])[0])}\n                </Toolbar>\n            </AppBar>\n\n            <Grid container direction='row'>\n                <Grid item sm={12} md={6}>\n                    <WinnersPercentageNoGradeChart participantsWithoutGradeData={participantsWithoutGradeData} />\n                </Grid>\n                <Grid item sm={12} md={6}>\n                    <WinnersPercentageChart participantsData={participantsData} />\n                </Grid>\n            </Grid>\n            <Grid container direction='row'>\n                <Grid item sm={12} md={6}>\n                    <AveragePointsChart pointsData={pointsData} />\n                </Grid>\n                <Grid item sm={12} md={6}>\n                    <PointsGapsChart pointsGapsData={pointsGapsData} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default AnalysisPage\n\n\n\n\n","import React, {useState} from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ImportPage from \"./panels/ImportPage\";\nimport AnalysisPage from \"./panels/AnalysisPage\";\n\nfunction App() {\n    const [jsonTable, setJsonTable] = useState();\n\n    return (\n        <Switch>\n            <Route exact path=\"/import\" render={() => <ImportPage setJsonTable={setJsonTable} />} />\n            <Route path='/result' render={() => <AnalysisPage jsonTable={jsonTable} />} />\n        </Switch>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {createBrowserHistory} from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter history={history}>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}